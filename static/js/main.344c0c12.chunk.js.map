{"version":3,"sources":["components/Bikes.jsx","components/ResySystem.jsx","App.js","serviceWorker.js","index.js"],"names":["Bikes","Fragment","className","scope","this","props","bikes","map","bike","key","id","name","src","image","alt","height","width","product_type","price","Component","ResySystem","state","filteredBikes","formFields","email","selection","errors","display","selectBike","e","target","value","filter","b","setState","enterEmail","validate","Object","keys","length","handleSubmit","preventDefault","console","log","axios","get","then","res","data","products","onSubmit","htmlFor","onChange","placeholder","style","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.344c0c12.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Bikes extends Component {\n\n  render() {\n    return (\n        <React.Fragment>\n\n            <div className=\"table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\">Product Type</th>\n                        <th scope=\"col\">Price</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                        { this.props.bikes.map(bike => {\n                            return (\n                                <tr key={bike.id}>\n                                    <td>{bike.name}</td>\n                                    <td><img src={bike.image} alt=\"\" height=\"100px\" width=\"100px\"/></td>\n                                    <td>{bike.product_type}</td>\n                                    <td>{bike.price}</td>\n                                </tr>\n                            );\n                        }) }\n\n                    </tbody>\n                </table>\n            </div>\n        </React.Fragment>\n\n    );\n  }\n}\n\nexport default Bikes;\n","import React, { Component } from \"react\";\nimport Bikes from './Bikes'\nimport axios from \"axios\";\n\nclass ResySystem extends Component {\n\n  state = {\n    bikes: [],\n    filteredBikes: [],\n    formFields: {\n        email: '',\n        selection: 'all'\n    },\n    errors: {},\n    display: 'none'\n  };\n\n  componentDidMount(){\n    axios.get('bikerentals.json').then(res => {\n        const bikes = res.data.products;\n        this.setState({ bikes: bikes, filteredBikes: bikes });\n      });\n  }\n\n  selectBike = e => {\n    let selection = e.target.value,\n        filteredBikes = [],\n        formFields = this.state.formFields;\n\n    if (selection === 'all') {\n        filteredBikes = this.state.bikes;\n    } else {\n        filteredBikes = this.state.bikes.filter(b => b.name === selection);\n    }\n    formFields.selection = selection;\n    this.setState({filteredBikes, formFields});\n  }\n\n  enterEmail = e => {\n    const email = e.target.value,\n          formFields = this.state.formFields;\n\n    formFields.email = email;\n    this.setState({formFields});\n  }\n\n  validate = () => {\n    const errors = {};\n    if (this.state.formFields.email === '') {\n        errors.email = 'Email is required';\n    }\n    if (this.state.formFields.selection === 'all') {\n        errors.selection = 'You must select an option'\n    }\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    console.log(errors);\n    if (errors) {\n        this.setState({ errors });\n    } else {\n        this.setState({display: 'block'});\n    }\n    return;\n  }\n\n  render() {\n    return (\n        <div>\n            <form className=\"form\" onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlSelect1\">Select an item to reserve</label>\n                    <select \n                        className=\"form-control\" \n                        id=\"exampleFormControlSelect1\" \n                        onChange={this.selectBike}\n                    >\n                        <option value='all'>choose one</option>\n                        { this.state.bikes.map(bike => {\n                            return <option key={bike.id} value={bike.name}>{bike.name}</option>;\n                        }) }\n                    </select>\n                    { this.state.errors.selection && <div className=\"alert alert-danger\">{this.state.errors.selection}</div> }\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                    <input\n                        className=\"form-control\" \n                        id=\"exampleFormControlInput1\" \n                        placeholder=\"name@example.com\"\n                        onChange={this.enterEmail}\n                        value={this.state.formFields.email}\n                    />\n                </div>\n                { this.state.errors.email && <div className=\"alert alert-danger\">{this.state.errors.email}</div> }\n                <button className=\"btn btn-primary\">Reserve</button>\n                <div className=\"alert alert-success\" style={{'display': this.state.display}}>Your request has been sent</div>\n            </form>\n            <br></br>\n            <Bikes bikes={this.state.filteredBikes}></Bikes>\n        </div>\n    );\n  }\n}\n\nexport default ResySystem;\n","import React from 'react';\nimport './App.css';\nimport ResySystem from './components/ResySystem'\n\nfunction App() {\n  return (\n    <ResySystem></ResySystem>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}